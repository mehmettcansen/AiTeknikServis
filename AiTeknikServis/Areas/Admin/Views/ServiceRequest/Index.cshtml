@model List<AiTeknikServis.Entities.Dtos.ServiceRequest.ServiceRequestResponseDto>
@{
    ViewData["Title"] = "Servis Talepleri Yönetimi";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2><i class="fas fa-list me-2"></i>Servis Talepleri Yönetimi</h2>
                    <p class="text-muted mb-0">Tüm servis taleplerini görüntüleyin ve yönetin</p>
                </div>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                        <i class="fas fa-filter me-1"></i>Filtrele
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="?status=Pending">Bekleyen Talepler</a></li>
                        <li><a class="dropdown-item" href="?status=InProgress">İşlemdeki Talepler</a></li>
                        <li><a class="dropdown-item" href="?status=Completed">Tamamlanan Talepler</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="?priority=Critical">Kritik Öncelik</a></li>
                        <li><a class="dropdown-item" href="?priority=High">Yüksek Öncelik</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Count</h4>
                            <p class="card-text">Toplam Talep</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clipboard-list fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Count(r => r.Status == AiTeknikServis.Entities.Models.ServiceStatus.Pending)</h4>
                            <p class="card-text">Beklemede</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clock fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Count(r => r.Status == AiTeknikServis.Entities.Models.ServiceStatus.InProgress)</h4>
                            <p class="card-text">İşlemde</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-cog fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Count(r => r.Status == AiTeknikServis.Entities.Models.ServiceStatus.Completed)</h4>
                            <p class="card-text">Tamamlandı</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-chart-pie me-2"></i>Arıza Tipine Göre Dağılım</h5>
                </div>
                <div class="card-body">
                    <canvas id="categoryChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Öncelik Dağılımı</h5>
                </div>
                <div class="card-body">
                    <canvas id="priorityChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Requests Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Servis Talepleri (@Model.Count)</h5>
                </div>
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Talep No</th>
                                        <th>Başlık</th>
                                        <th>Müşteri</th>
                                        <th>Kategori</th>
                                        <th>Öncelik</th>
                                        <th>Durum</th>
                                        <th>Teknisyen</th>
                                        <th>Oluşturulma Tarihi</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var request in Model.OrderByDescending(r => r.CreatedDate))
                                    {
                                        <tr>
                                            <td><strong>#@request.Id</strong></td>
                                            <td>
                                                <div class="fw-bold">@request.Title</div>
                                                <small class="text-muted">@(request.Description.Length > 50 ? request.Description.Substring(0, 50) + "..." : request.Description)</small>
                                            </td>
                                            <td>@request.CustomerName</td>
                                            <td>
                                                <span class="badge bg-secondary">
                                                    @switch (request.Category)
                                                    {
                                                        case AiTeknikServis.Entities.Models.ServiceCategory.SoftwareIssue:
                                                            <i class="fas fa-code me-1"></i>@("Yazılım")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceCategory.HardwareIssue:
                                                            <i class="fas fa-microchip me-1"></i>@("Donanım")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceCategory.NetworkIssue:
                                                            <i class="fas fa-network-wired me-1"></i>@("Ağ")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceCategory.SecurityIssue:
                                                            <i class="fas fa-shield-alt me-1"></i>@("Güvenlik")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceCategory.Maintenance:
                                                            <i class="fas fa-tools me-1"></i>@("Bakım")
                                                            break;
                                                    }
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @(request.Priority == AiTeknikServis.Entities.Models.Priority.Critical ? "bg-danger" : 
                                                                      request.Priority == AiTeknikServis.Entities.Models.Priority.High ? "bg-warning" : 
                                                                      request.Priority == AiTeknikServis.Entities.Models.Priority.Normal ? "bg-info" : "bg-secondary")">
                                                    @switch (request.Priority)
                                                    {
                                                        case AiTeknikServis.Entities.Models.Priority.Critical:
                                                            <i class="fas fa-exclamation-triangle me-1"></i>@("Kritik")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.Priority.High:
                                                            <i class="fas fa-arrow-up me-1"></i>@("Yüksek")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.Priority.Normal:
                                                            <i class="fas fa-minus me-1"></i>@("Normal")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.Priority.Low:
                                                            <i class="fas fa-arrow-down me-1"></i>@("Düşük")
                                                            break;
                                                    }
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @(request.Status == AiTeknikServis.Entities.Models.ServiceStatus.Completed ? "bg-success" : 
                                                                      request.Status == AiTeknikServis.Entities.Models.ServiceStatus.InProgress ? "bg-primary" : 
                                                                      request.Status == AiTeknikServis.Entities.Models.ServiceStatus.Pending ? "bg-warning" : 
                                                                      request.Status == AiTeknikServis.Entities.Models.ServiceStatus.OnHold ? "bg-secondary" : "bg-danger")">
                                                    @switch (request.Status)
                                                    {
                                                        case AiTeknikServis.Entities.Models.ServiceStatus.Pending:
                                                            <i class="fas fa-clock me-1"></i>@("Beklemede")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceStatus.InProgress:
                                                            <i class="fas fa-cog me-1"></i>@("İşlemde")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceStatus.OnHold:
                                                            <i class="fas fa-pause me-1"></i>@("Bekletildi")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceStatus.Completed:
                                                            <i class="fas fa-check me-1"></i>@("Tamamlandı")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceStatus.Cancelled:
                                                            <i class="fas fa-times me-1"></i>@("İptal Edildi")
                                                            break;
                                                        case AiTeknikServis.Entities.Models.ServiceStatus.Rejected:
                                                            <i class="fas fa-ban me-1"></i>@("Reddedildi")
                                                            break;
                                                    }
                                                </span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(request.TechnicianName))
                                                {
                                                    <div class="d-flex align-items-center">
                                                        <i class="fas fa-user-cog me-2 text-primary"></i>
                                                        <span>@request.TechnicianName</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">
                                                        <i class="fas fa-user-slash me-1"></i>Atanmadı
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div>@request.CreatedDate.ToString("dd.MM.yyyy")</div>
                                                <small class="text-muted">@request.CreatedDate.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="Details" asp-route-id="@request.Id" 
                                                       class="btn btn-outline-primary" data-bs-toggle="tooltip" title="Detayları Görüntüle">
                                                        <i class="fas fa-eye"></i>
                                                    </a>

                                                    <form asp-action="Delete" asp-route-id="@request.Id" method="post" style="display: inline;" 
                                                          onsubmit="return confirm('Bu talebi silmek istediğinizden emin misiniz?')">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="Sil">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
                            <h4 class="text-muted">Henüz hiç servis talebi bulunmuyor</h4>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Tooltip'leri etkinleştir
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        // Kategori dağılım grafiği
        const categoryData = {
            'Yazılım': @Model.Count(r => r.Category == AiTeknikServis.Entities.Models.ServiceCategory.SoftwareIssue),
            'Donanım': @Model.Count(r => r.Category == AiTeknikServis.Entities.Models.ServiceCategory.HardwareIssue),
            'Ağ': @Model.Count(r => r.Category == AiTeknikServis.Entities.Models.ServiceCategory.NetworkIssue),
            'Güvenlik': @Model.Count(r => r.Category == AiTeknikServis.Entities.Models.ServiceCategory.SecurityIssue),
            'Bakım': @Model.Count(r => r.Category == AiTeknikServis.Entities.Models.ServiceCategory.Maintenance)
        };

        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        new Chart(categoryCtx, {
            type: 'doughnut',
            data: {
                labels: Object.keys(categoryData),
                datasets: [{
                    data: Object.values(categoryData),
                    backgroundColor: [
                        '#007bff', // Yazılım - Mavi
                        '#28a745', // Donanım - Yeşil
                        '#ffc107', // Ağ - Sarı
                        '#dc3545', // Güvenlik - Kırmızı
                        '#6c757d'  // Bakım - Gri
                    ],
                    borderWidth: 2,
                    borderColor: '#fff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 20,
                            usePointStyle: true
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((context.parsed / total) * 100).toFixed(1);
                                return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
                            }
                        }
                    }
                }
            }
        });

        // Öncelik dağılım grafiği
        const priorityData = {
            'Kritik': @Model.Count(r => r.Priority == AiTeknikServis.Entities.Models.Priority.Critical),
            'Yüksek': @Model.Count(r => r.Priority == AiTeknikServis.Entities.Models.Priority.High),
            'Normal': @Model.Count(r => r.Priority == AiTeknikServis.Entities.Models.Priority.Normal),
            'Düşük': @Model.Count(r => r.Priority == AiTeknikServis.Entities.Models.Priority.Low)
        };

        const priorityCtx = document.getElementById('priorityChart').getContext('2d');
        new Chart(priorityCtx, {
            type: 'bar',
            data: {
                labels: Object.keys(priorityData),
                datasets: [{
                    label: 'Talep Sayısı',
                    data: Object.values(priorityData),
                    backgroundColor: [
                        '#dc3545', // Kritik - Kırmızı
                        '#fd7e14', // Yüksek - Turuncu
                        '#20c997', // Normal - Teal
                        '#6c757d'  // Düşük - Gri
                    ],
                    borderWidth: 1,
                    borderColor: '#fff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        });
    </script>
}